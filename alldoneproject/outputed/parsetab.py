
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'LPAREN NUMBER OUTPUT RPAREN SEMICOLON STRINGstatement : OUTPUT LPAREN output_data RPAREN SEMICOLONoutput_data : STRINGoutput_data : NUMBER'
    
_lr_action_items = {'OUTPUT':([0,],[2,]),'$end':([1,8,],[0,-1,]),'LPAREN':([2,],[3,]),'STRING':([3,],[5,]),'NUMBER':([3,],[6,]),'RPAREN':([4,5,6,],[7,-2,-3,]),'SEMICOLON':([7,],[8,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[1,]),'output_data':([3,],[4,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> OUTPUT LPAREN output_data RPAREN SEMICOLON','statement',5,'p_statement_output','parser.py',5),
  ('output_data -> STRING','output_data',1,'p_output_data_string','parser.py',8),
  ('output_data -> NUMBER','output_data',1,'p_output_data_number','parser.py',12),
]
