Created by PLY version 3.11 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> OUTPUT LPAREN output_data RPAREN SEMICOLON
Rule 2     output_data -> STRING
Rule 3     output_data -> NUMBER

Terminals, with rules where they appear

LPAREN               : 1
NUMBER               : 3
OUTPUT               : 1
RPAREN               : 1
SEMICOLON            : 1
STRING               : 2
error                : 

Nonterminals, with rules where they appear

output_data          : 1
statement            : 0

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . OUTPUT LPAREN output_data RPAREN SEMICOLON

    OUTPUT          shift and go to state 2

    statement                      shift and go to state 1

state 1

    (0) S' -> statement .



state 2

    (1) statement -> OUTPUT . LPAREN output_data RPAREN SEMICOLON

    LPAREN          shift and go to state 3


state 3

    (1) statement -> OUTPUT LPAREN . output_data RPAREN SEMICOLON
    (2) output_data -> . STRING
    (3) output_data -> . NUMBER

    STRING          shift and go to state 5
    NUMBER          shift and go to state 6

    output_data                    shift and go to state 4

state 4

    (1) statement -> OUTPUT LPAREN output_data . RPAREN SEMICOLON

    RPAREN          shift and go to state 7


state 5

    (2) output_data -> STRING .

    RPAREN          reduce using rule 2 (output_data -> STRING .)


state 6

    (3) output_data -> NUMBER .

    RPAREN          reduce using rule 3 (output_data -> NUMBER .)


state 7

    (1) statement -> OUTPUT LPAREN output_data RPAREN . SEMICOLON

    SEMICOLON       shift and go to state 8


state 8

    (1) statement -> OUTPUT LPAREN output_data RPAREN SEMICOLON .

    $end            reduce using rule 1 (statement -> OUTPUT LPAREN output_data RPAREN SEMICOLON .)

